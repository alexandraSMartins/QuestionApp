{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\SimpleApp\\\\App\\\\frontend-app\\\\src\\\\scenes\\\\QuestionForm\\\\QuestionForm.js\";\nimport React from \"react\";\nimport \"./QuestionForm.css\"; //Import Components\n\nimport { Form, Field } from \"react-final-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { composeValidators, required, emailFormat, greaterThanTomorrow } from \"./Validators\"; //Adapted from: https://final-form.org/docs/react-final-form/examples/simple\n\nconst DatePickerAdapter = ({\n  input: {\n    onChange,\n    value\n  },\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(DatePicker, {\n  selected: value,\n  onChange: date => onChange(date),\n  ...rest\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\n_c = DatePickerAdapter;\n\nclass QuestionForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.postQuestion = a => {\n      console.log(\"Question Posted!\");\n      console.log(a);\n    };\n\n    this.onFormChange = a => {\n      console.log(\"Change: \", a);\n    };\n\n    this.state = {\n      hasErrors: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Submit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.postQuestion,\n        onChange: this.onFormChange,\n        render: ({\n          handleSubmit,\n          form,\n          submitting,\n          pristine\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"name\",\n              validate: required,\n              children: ({\n                input,\n                meta\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                    type: \"text\",\n                    placeholder: \"Name\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 25\n                  }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: meta.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              validate: composeValidators(required, emailFormat),\n              children: ({\n                input,\n                meta\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                    type: \"text\",\n                    placeholder: \"Name\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: meta.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"date\",\n              dateFormat: \"yyyy/MM/dd\",\n              validate: composeValidators(required, greaterThanTomorrow),\n              component: DatePickerAdapter,\n              children: ({\n                input,\n                meta\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                    dateFormat: \"yyyy/MM/dd\",\n                    selected: input.value,\n                    onChange: date => input.onChange(date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 25\n                  }, this), meta.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: meta.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Observations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"observations\",\n              component: \"textarea\",\n              type: \"text\",\n              placeholder: \"Observations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: submitting || pristine,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: form.reset,\n              disabled: submitting || pristine,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default QuestionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePickerAdapter\");","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/√Årea de Trabalho/SimpleApp/App/frontend-app/src/scenes/QuestionForm/QuestionForm.js"],"names":["React","Form","Field","DatePicker","composeValidators","required","emailFormat","greaterThanTomorrow","DatePickerAdapter","input","onChange","value","rest","date","QuestionForm","Component","constructor","props","postQuestion","a","console","log","onFormChange","state","hasErrors","render","handleSubmit","form","submitting","pristine","meta","width","error","touched","reset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./QuestionForm.css\";\r\n//Import Components\r\nimport { Form, Field } from \"react-final-form\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  composeValidators,\r\n  required,\r\n  emailFormat,\r\n  greaterThanTomorrow,\r\n} from \"./Validators\";\r\n\r\n//Adapted from: https://final-form.org/docs/react-final-form/examples/simple\r\n\r\nconst DatePickerAdapter = ({ input: { onChange, value }, ...rest }) => (\r\n  <DatePicker selected={value} onChange={(date) => onChange(date)} {...rest} />\r\n);\r\n\r\nclass QuestionForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hasErrors: false,\r\n    };\r\n  }\r\n\r\n  postQuestion = (a) => {\r\n    console.log(\"Question Posted!\");\r\n    console.log(a);\r\n  };\r\n\r\n  onFormChange = (a) => {\r\n    console.log(\"Change: \", a);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>Submit Question</h2>\r\n        <Form\r\n          onSubmit={this.postQuestion}\r\n          onChange={this.onFormChange}\r\n          render={({ handleSubmit, form, submitting, pristine }) => (\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n              <div className=\"form-item\">\r\n                <label>Name</label>\r\n                <Field name=\"name\" validate={required}>\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <div>\r\n                        <input\r\n                          {...input}\r\n                          type=\"text\"\r\n                          placeholder=\"Name\"\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                        {meta.error && meta.touched && (\r\n                          <div className=\"error\">{meta.error}</div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Field>\r\n              </div>\r\n              <div className=\"form-item\">\r\n                <label>Email</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  validate={composeValidators(required, emailFormat)}\r\n                >\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <div>\r\n                        <input\r\n                          {...input}\r\n                          type=\"text\"\r\n                          placeholder=\"Name\"\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                        {meta.error && meta.touched && (\r\n                          <div className=\"error\">{meta.error}</div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Field>\r\n              </div>\r\n              <div className=\"form-item\">\r\n                <label>Date</label>\r\n                <Field\r\n                  name=\"date\"\r\n                  dateFormat=\"yyyy/MM/dd\"\r\n                  validate={composeValidators(required, greaterThanTomorrow)}\r\n                  component={DatePickerAdapter}\r\n                >\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <div>\r\n                        <DatePicker\r\n                          dateFormat=\"yyyy/MM/dd\"\r\n                          selected={input.value}\r\n                          onChange={(date) => input.onChange(date)}\r\n                        />\r\n                        {meta.error && (\r\n                          <div className=\"error\">{meta.error}</div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Field>\r\n              </div>\r\n              <div className=\"form-item\">\r\n                <label>Observations</label>\r\n                <Field\r\n                  name=\"observations\"\r\n                  component=\"textarea\"\r\n                  type=\"text\"\r\n                  placeholder=\"Observations\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"buttons\">\r\n                <button type=\"submit\" disabled={submitting || pristine}>\r\n                  Submit\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={form.reset}\r\n                  disabled={submitting || pristine}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionForm;\r\n"]},"metadata":{},"sourceType":"module"}