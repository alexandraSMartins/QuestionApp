{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\SimpleApp\\\\App\\\\frontend-app\\\\src\\\\scenes\\\\QuestionList\\\\QuestionList.js\";\nimport React from \"react\";\nimport \"./QuestionList.css\"; //Import Components\n\nimport ScrollableTable from \"../../components/ScrollableTable\"; // const mockQuestions = [\n//   {\n//     id: \"5feb6904f827835ed827ddeb\",\n//     name: \"Who am I?\",\n//     email: \"who@sky.world\",\n//     date: \"2020-12-31T00:00:00.000Z\",\n//     observations: \"Who knows.\",\n//     creationDate: \"2020-12-29T17:36:04.933Z\",\n//   },\n//   {\n//     id: \"5feb6904f827835ed827ddeb\",\n//     name: \"Who am I?\",\n//     email: \"who@sky.world\",\n//     date: \"2020-12-31T00:00:00.000Z\",\n//     observations: \"Who knows.\",\n//     creationDate: \"2020-12-29T17:36:04.933Z\",\n//   },\n// ];\n\nconst columns = [{\n  id: \"name\",\n  label: \"Name\"\n}, {\n  id: \"email\",\n  label: \"Email\"\n}, {\n  id: \"date\",\n  label: \"Date\"\n}, {\n  id: \"observations\",\n  label: \"Observations\"\n}, {\n  id: \"creationDate\",\n  label: \"Creation Date\"\n}];\n\nclass QuestionList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionList: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(process.env.REACT_APP_SERVER_URL);\n    fetch(process.env.REACT_APP_SERVER_URL + \"/questions\").then(res => res.json()).then(result => {\n      this.setState({\n        questionList: result\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      questionList: []\n    });\n  }\n\n  render() {\n    const questionList = this.state.questionList;\n    console.log(\"Questions: \", questionList);\n    return /*#__PURE__*/_jsxDEV(ScrollableTable, {\n      columns: columns,\n      rows: questionList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Área de Trabalho/SimpleApp/App/frontend-app/src/scenes/QuestionList/QuestionList.js"],"names":["React","ScrollableTable","columns","id","label","QuestionList","Component","constructor","props","state","questionList","componentDidMount","console","log","process","env","REACT_APP_SERVER_URL","fetch","then","res","json","result","setState","componentWillUnmount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,kCAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACED,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATc,EAad;AACED,EAAAA,EAAE,EAAE,cADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbc,EAiBd;AACED,EAAAA,EAAE,EAAE,cADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAjBc,CAAhB;;AAuBA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,oBAAxB;AACFC,IAAAA,KAAK,CAACH,OAAO,CAACC,GAAR,CAAYC,oBAAZ,GAAmC,YAApC,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChB,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,YAAY,EAAEW;AAAhB,OAAd;AACD,KAJH;AAKD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,SAAKD,QAAL,CAAc;AAAEZ,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAMd,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAAhC;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,YAA3B;AAEA,wBAAO,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAER,OAA1B;AAAmC,MAAA,IAAI,EAAEQ;AAAzC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA5BwC;;AA+B3C,eAAeL,YAAf","sourcesContent":["import React from \"react\";\r\nimport \"./QuestionList.css\";\r\n//Import Components\r\nimport ScrollableTable from \"../../components/ScrollableTable\";\r\n\r\n// const mockQuestions = [\r\n//   {\r\n//     id: \"5feb6904f827835ed827ddeb\",\r\n//     name: \"Who am I?\",\r\n//     email: \"who@sky.world\",\r\n//     date: \"2020-12-31T00:00:00.000Z\",\r\n//     observations: \"Who knows.\",\r\n//     creationDate: \"2020-12-29T17:36:04.933Z\",\r\n//   },\r\n//   {\r\n//     id: \"5feb6904f827835ed827ddeb\",\r\n//     name: \"Who am I?\",\r\n//     email: \"who@sky.world\",\r\n//     date: \"2020-12-31T00:00:00.000Z\",\r\n//     observations: \"Who knows.\",\r\n//     creationDate: \"2020-12-29T17:36:04.933Z\",\r\n//   },\r\n// ];\r\n\r\nconst columns = [\r\n  {\r\n    id: \"name\",\r\n    label: \"Name\",\r\n  },\r\n  {\r\n    id: \"email\",\r\n    label: \"Email\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"Date\",\r\n  },\r\n  {\r\n    id: \"observations\",\r\n    label: \"Observations\",\r\n  },\r\n  {\r\n    id: \"creationDate\",\r\n    label: \"Creation Date\",\r\n  },\r\n];\r\n\r\nclass QuestionList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      questionList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n      console.log(process.env.REACT_APP_SERVER_URL);\r\n    fetch(process.env.REACT_APP_SERVER_URL + \"/questions\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({ questionList: result });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ questionList: [] });\r\n  }\r\n\r\n  render() {\r\n    const questionList = this.state.questionList;\r\n\r\n    console.log(\"Questions: \", questionList);\r\n\r\n    return <ScrollableTable columns={columns} rows={questionList} />;\r\n  }\r\n}\r\n\r\nexport default QuestionList;\r\n"]},"metadata":{},"sourceType":"module"}