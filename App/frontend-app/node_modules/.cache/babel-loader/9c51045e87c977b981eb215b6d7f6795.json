{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\SimpleApp\\\\App\\\\frontend-app\\\\src\\\\scenes\\\\QuestionForm\\\\QuestionForm.js\";\nimport React from \"react\";\nimport \"./QuestionForm.css\"; //Import Components\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Form, Field } from \"react-final-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { composeValidators, required, emailFormat, greaterThanTomorrow } from \"./Validators\";\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\"; //Adapted from: https://final-form.org/docs/react-final-form/examples/simple\n\nconst DatePickerAdapter = ({\n  input: {\n    onChange,\n    value\n  },\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(DatePicker, {\n  selected: value,\n  onChange: date => onChange(date),\n  ...rest\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n\n_c = DatePickerAdapter;\n\nclass QuestionForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.postQuestion = formData => {\n      const date = formData.date && `${formData.date.getFullYear()}/${formData.date.getMonth() + 1}/${formData.date.getDate()}`;\n      const data = {\n        name: formData.name,\n        email: formData.email,\n        date: date,\n        observations: formData.observations\n      };\n      const url = process.env.REACT_APP_SERVER_URL + \"/questions\";\n      const requestConfig = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(url, requestConfig).then(this.handleErrors).then(() => {\n        this.setState({\n          redirect: true\n        });\n        window.location.reload();\n      }).catch(error => {\n        this.setState({\n          errorAlert: true,\n          errorMessage: error.message\n        });\n      });\n    };\n\n    this.state = {\n      errorAlert: false,\n      errorMessage: \"\",\n      redirect: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      errorAlert: false,\n      errorMessage: \"\"\n    });\n  }\n\n  handleErrors(response) {\n    if (!response.ok) {\n      throw Error(\"An Internal Error has occurred. Please retry the operation.\");\n    }\n\n    return response;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(Router, {\n        children: this.state.redirect && /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Submit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.postQuestion,\n        render: ({\n          handleSubmit,\n          form,\n          submitting,\n          pristine\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"name\",\n              validate: required,\n              children: ({\n                input,\n                meta\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                    type: \"text\",\n                    placeholder: \"Name\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 25\n                  }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: meta.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              validate: composeValidators(required, emailFormat),\n              children: ({\n                input,\n                meta\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                    type: \"text\",\n                    placeholder: \"Email\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 25\n                  }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: meta.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"date\",\n              dateFormat: \"yyyy/MM/dd\",\n              validate: composeValidators(required, greaterThanTomorrow),\n              component: DatePickerAdapter,\n              children: ({\n                input,\n                meta\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                    dateFormat: \"yyyy/MM/dd\",\n                    selected: input.value,\n                    customInput: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      style: {\n                        width: \"100%\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 40\n                    }, this),\n                    onChange: date => input.onChange(date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this), meta.error && meta.dirty && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: meta.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Observations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"observations\",\n              component: \"textarea\",\n              type: \"text\",\n              placeholder: \"Observations\",\n              style: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: form.getState().invalid,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: form.reset,\n              disabled: submitting || pristine,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), this.state.errorAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"button\",\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default QuestionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePickerAdapter\");","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Área de Trabalho/SimpleApp/App/frontend-app/src/scenes/QuestionForm/QuestionForm.js"],"names":["React","Alert","Form","Field","DatePicker","composeValidators","required","emailFormat","greaterThanTomorrow","BrowserRouter","Router","Redirect","DatePickerAdapter","input","onChange","value","rest","date","QuestionForm","Component","constructor","props","postQuestion","formData","getFullYear","getMonth","getDate","data","name","email","observations","url","process","env","REACT_APP_SERVER_URL","requestConfig","method","headers","Accept","body","JSON","stringify","fetch","then","handleErrors","setState","redirect","window","location","reload","catch","error","errorAlert","errorMessage","message","state","componentWillUnmount","response","ok","Error","render","handleSubmit","form","submitting","pristine","meta","width","touched","dirty","getState","invalid","reset"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP,C,CACA;;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SACEC,iBADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,mBAJF,QAKO,cALP;AAMA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,QAAlC,QAAkD,kBAAlD,C,CAEA;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAT;AAA8B,KAAGC;AAAjC,CAAD,kBACxB,QAAC,UAAD;AAAY,EAAA,QAAQ,EAAED,KAAtB;AAA6B,EAAA,QAAQ,EAAGE,IAAD,IAAUH,QAAQ,CAACG,IAAD,CAAzD;AAAA,KAAqED;AAArE;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMJ,iB;;AAIN,MAAMM,YAAN,SAA2BlB,KAAK,CAACmB,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,YAvBmB,GAuBHC,QAAD,IAAc;AAC3B,YAAMN,IAAI,GACRM,QAAQ,CAACN,IAAT,IACC,GAAEM,QAAQ,CAACN,IAAT,CAAcO,WAAd,EAA4B,IAC7BD,QAAQ,CAACN,IAAT,CAAcQ,QAAd,KAA2B,CAC5B,IAAGF,QAAQ,CAACN,IAAT,CAAcS,OAAd,EAAwB,EAJ9B;AAMA,YAAMC,IAAI,GAAG;AACXC,QAAAA,IAAI,EAAEL,QAAQ,CAACK,IADJ;AAEXC,QAAAA,KAAK,EAAEN,QAAQ,CAACM,KAFL;AAGXZ,QAAAA,IAAI,EAAEA,IAHK;AAIXa,QAAAA,YAAY,EAAEP,QAAQ,CAACO;AAJZ,OAAb;AAOA,YAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAZ,GAAmC,YAA/C;AAEA,YAAMC,aAAa,GAAG;AACpBC,QAAAA,MAAM,EAAE,MADY;AAEpBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,mCADD;AAEP,0BAAgB;AAFT,SAFW;AAMpBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,IAAf;AANc,OAAtB;AASAe,MAAAA,KAAK,CAACX,GAAD,EAAMI,aAAN,CAAL,CACGQ,IADH,CACQ,KAAKC,YADb,EAEGD,IAFH,CAEQ,MAAM;AACV,aAAKE,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,OALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChB,aAAKN,QAAL,CAAc;AACZO,UAAAA,UAAU,EAAE,IADA;AAEZC,UAAAA,YAAY,EAAEF,KAAK,CAACG;AAFR,SAAd;AAID,OAXH;AAYD,KA5DkB;;AAGjB,SAAKC,KAAL,GAAa;AACXH,MAAAA,UAAU,EAAE,KADD;AAEXC,MAAAA,YAAY,EAAE,EAFH;AAGXP,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB,SAAKX,QAAL,CAAc;AAAEO,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,YAAY,EAAE;AAAnC,KAAd;AACD;;AAEDT,EAAAA,YAAY,CAACa,QAAD,EAAW;AACrB,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,YAAMC,KAAK,CACT,6DADS,CAAX;AAGD;;AACD,WAAOF,QAAP;AACD;;AAyCDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,MAAD;AAAA,kBAAS,KAAKL,KAAL,CAAWT,QAAX,iBAAuB,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AACE,QAAA,QAAQ,EAAE,KAAKxB,YADjB;AAEE,QAAA,MAAM,EAAE,CAAC;AAAEuC,UAAAA,YAAF;AAAgBC,UAAAA,IAAhB;AAAsBC,UAAAA,UAAtB;AAAkCC,UAAAA;AAAlC,SAAD,kBACN;AAAM,UAAA,QAAQ,EAAEH,YAAhB;AAA8B,UAAA,SAAS,EAAC,MAAxC;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,QAAQ,EAAEvD,QAA7B;AAAA,wBACG,CAAC;AAAEO,gBAAAA,KAAF;AAASoD,gBAAAA;AAAT,eAAD,KAAqB;AACpB,oCACE;AAAA,0CACE,sBACMpD,KADN;AAEE,oBAAA,IAAI,EAAC,MAFP;AAGE,oBAAA,WAAW,EAAC,MAHd;AAIE,oBAAA,KAAK,EAAE;AAAEqD,sBAAAA,KAAK,EAAE;AAAT;AAJT;AAAA;AAAA;AAAA;AAAA,0BADF,EAOGD,IAAI,CAACd,KAAL,IAAcc,IAAI,CAACE,OAAnB,iBACC;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,8BAAwBF,IAAI,CAACd;AAA7B;AAAA;AAAA;AAAA;AAAA,0BARJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAaD;AAfH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAqBE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,QAAQ,EAAE9C,iBAAiB,CAACC,QAAD,EAAWC,WAAX,CAF7B;AAAA,wBAIG,CAAC;AAAEM,gBAAAA,KAAF;AAASoD,gBAAAA;AAAT,eAAD,KAAqB;AACpB,oCACE;AAAA,0CACE,sBACMpD,KADN;AAEE,oBAAA,IAAI,EAAC,MAFP;AAGE,oBAAA,WAAW,EAAC,OAHd;AAIE,oBAAA,KAAK,EAAE;AAAEqD,sBAAAA,KAAK,EAAE;AAAT;AAJT;AAAA;AAAA;AAAA;AAAA,0BADF,EAOGD,IAAI,CAACd,KAAL,IAAcc,IAAI,CAACE,OAAnB,iBACC;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,8BAAwBF,IAAI,CAACd;AAA7B;AAAA;AAAA;AAAA;AAAA,0BARJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAaD;AAlBH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF,eA4CE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,UAAU,EAAC,YAFb;AAGE,cAAA,QAAQ,EAAE9C,iBAAiB,CAACC,QAAD,EAAWE,mBAAX,CAH7B;AAIE,cAAA,SAAS,EAAEI,iBAJb;AAAA,wBAMG,CAAC;AAAEC,gBAAAA,KAAF;AAASoD,gBAAAA;AAAT,eAAD,KAAqB;AACpB,oCACE;AAAA,0CACE,QAAC,UAAD;AACE,oBAAA,UAAU,EAAC,YADb;AAEE,oBAAA,QAAQ,EAAEpD,KAAK,CAACE,KAFlB;AAGE,oBAAA,WAAW,eAAE;AAAO,sBAAA,IAAI,EAAC,MAAZ;AAAmB,sBAAA,KAAK,EAAE;AAAEmD,wBAAAA,KAAK,EAAE;AAAT;AAA1B;AAAA;AAAA;AAAA;AAAA,4BAHf;AAIE,oBAAA,QAAQ,EAAGjD,IAAD,IAAUJ,KAAK,CAACC,QAAN,CAAeG,IAAf;AAJtB;AAAA;AAAA;AAAA;AAAA,0BADF,EAOGgD,IAAI,CAACd,KAAL,IAAcc,IAAI,CAACG,KAAnB,iBACC;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,8BAAwBH,IAAI,CAACd;AAA7B;AAAA;AAAA;AAAA;AAAA,0BARJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAaD;AApBH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5CF,eAqEE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,cADP;AAEE,cAAA,SAAS,EAAC,UAFZ;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,WAAW,EAAC,cAJd;AAKE,cAAA,KAAK,EAAE;AAAEe,gBAAAA,KAAK,EAAE;AAAT;AALT;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArEF,eAgFE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,QAAQ,EAAEJ,IAAI,CAACO,QAAL,GAAgBC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAER,IAAI,CAACS,KAFhB;AAGE,cAAA,QAAQ,EAAER,UAAU,IAAIC,QAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAHF,EAqGG,KAAKT,KAAL,CAAWH,UAAX,iBACC,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA,kBAAyB,KAAKG,KAAL,CAAWF;AAApC;AAAA;AAAA;AAAA;AAAA,cAtGJ,eAwGE;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxGF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4GD;;AA5KwC;;AA+K3C,eAAenC,YAAf","sourcesContent":["import React from \"react\";\r\nimport \"./QuestionForm.css\";\r\n//Import Components\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  composeValidators,\r\n  required,\r\n  emailFormat,\r\n  greaterThanTomorrow,\r\n} from \"./Validators\";\r\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\n\r\n//Adapted from: https://final-form.org/docs/react-final-form/examples/simple\r\n\r\nconst DatePickerAdapter = ({ input: { onChange, value }, ...rest }) => (\r\n  <DatePicker selected={value} onChange={(date) => onChange(date)} {...rest} />\r\n);\r\n\r\nclass QuestionForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorAlert: false,\r\n      errorMessage: \"\",\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ errorAlert: false, errorMessage: \"\" });\r\n  }\r\n\r\n  handleErrors(response) {\r\n    if (!response.ok) {\r\n      throw Error(\r\n        \"An Internal Error has occurred. Please retry the operation.\"\r\n      );\r\n    }\r\n    return response;\r\n  }\r\n\r\n  postQuestion = (formData) => {\r\n    const date =\r\n      formData.date &&\r\n      `${formData.date.getFullYear()}/${\r\n        formData.date.getMonth() + 1\r\n      }/${formData.date.getDate()}`;\r\n\r\n    const data = {\r\n      name: formData.name,\r\n      email: formData.email,\r\n      date: date,\r\n      observations: formData.observations,\r\n    };\r\n\r\n    const url = process.env.REACT_APP_SERVER_URL + \"/questions\";\r\n\r\n    const requestConfig = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(url, requestConfig)\r\n      .then(this.handleErrors)\r\n      .then(() => {\r\n        this.setState({ redirect: true });\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          errorAlert: true,\r\n          errorMessage: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <Router>{this.state.redirect && <Redirect to=\"/\" />}</Router>\r\n        <h2>Submit Question</h2>\r\n        <Form\r\n          onSubmit={this.postQuestion}\r\n          render={({ handleSubmit, form, submitting, pristine }) => (\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n              <div className=\"form-item\">\r\n                <label>Name</label>\r\n                <Field name=\"name\" validate={required}>\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <div>\r\n                        <input\r\n                          {...input}\r\n                          type=\"text\"\r\n                          placeholder=\"Name\"\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                        {meta.error && meta.touched && (\r\n                          <div className=\"error\">{meta.error}</div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Field>\r\n              </div>\r\n              <div className=\"form-item\">\r\n                <label>Email</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  validate={composeValidators(required, emailFormat)}\r\n                >\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <div>\r\n                        <input\r\n                          {...input}\r\n                          type=\"text\"\r\n                          placeholder=\"Email\"\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                        {meta.error && meta.touched && (\r\n                          <div className=\"error\">{meta.error}</div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Field>\r\n              </div>\r\n              <div className=\"form-item\">\r\n                <label>Date</label>\r\n                <Field\r\n                  name=\"date\"\r\n                  dateFormat=\"yyyy/MM/dd\"\r\n                  validate={composeValidators(required, greaterThanTomorrow)}\r\n                  component={DatePickerAdapter}\r\n                >\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <div>\r\n                        <DatePicker\r\n                          dateFormat=\"yyyy/MM/dd\"\r\n                          selected={input.value}\r\n                          customInput={<input type=\"text\" style={{ width: \"100%\" }}/>}\r\n                          onChange={(date) => input.onChange(date)}\r\n                        />\r\n                        {meta.error && meta.dirty && (\r\n                          <div className=\"error\">{meta.error}</div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Field>\r\n              </div>\r\n              <div className=\"form-item\">\r\n                <label>Observations</label>\r\n                <Field\r\n                  name=\"observations\"\r\n                  component=\"textarea\"\r\n                  type=\"text\"\r\n                  placeholder=\"Observations\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"buttons\">\r\n                <button type=\"submit\" disabled={form.getState().invalid}>\r\n                  Submit\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={form.reset}\r\n                  disabled={submitting || pristine}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        />\r\n        {this.state.errorAlert && (\r\n          <Alert severity=\"error\">{this.state.errorMessage}</Alert>\r\n        )}\r\n        <button className=\"submit-button\" type=\"button\">Return</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionForm;\r\n"]},"metadata":{},"sourceType":"module"}