{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\SimpleApp\\\\App\\\\frontend-app\\\\src\\\\scenes\\\\QuestionList\\\\QuestionList.js\";\nimport React, { Fragment } from \"react\";\nimport \"./QuestionList.css\"; //Import Components\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport ScrollableTable from \"../../components/ScrollableTable\"; // const mockQuestions = [\n//   {\n//     id: \"5feb6904f827835ed827ddeb\",\n//     name: \"Who am I?\",\n//     email: \"who@sky.world\",\n//     date: \"2020-12-31T00:00:00.000Z\",\n//     observations: \"Who knows.\",\n//     creationDate: \"2020-12-29T17:36:04.933Z\",\n//   },\n//   {\n//     id: \"5feb6904f827835ed827ddeb\",\n//     name: \"Who am I?\",\n//     email: \"who@sky.world\",\n//     date: \"2020-12-31T00:00:00.000Z\",\n//     observations: \"Who knows.\",\n//     creationDate: \"2020-12-29T17:36:04.933Z\",\n//   },\n// ];\n\nconst columns = [{\n  id: \"name\",\n  label: \"Name\"\n}, {\n  id: \"email\",\n  label: \"Email\"\n}, {\n  id: \"date\",\n  label: \"Date\"\n}, {\n  id: \"observations\",\n  label: \"Observations\"\n}, {\n  id: \"creationDate\",\n  label: \"Creation Date\"\n}];\n\nclass QuestionList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchQuestionList = (id, page) => {\n      let url = process.env.REACT_APP_SERVER_URL + \"/questions\";\n\n      if (id) {\n        url += `?id=${id}`;\n      } else if (page) {\n        url += `?page=${page}`;\n      }\n\n      fetch(url).then(this.handleErrors).then(res => res.json()).then(result => {\n        this.setState({\n          questionList: result\n        });\n      }).catch(function (error) {\n        console.log(\"ERROR: \", error);\n\n        switch (error.response.status) {\n          default:\n            this.setState({\n              errorAlert: true,\n              errorMessage: error.response.message\n            });\n        }\n      });\n    };\n\n    this.state = {\n      questionList: [],\n      errorAlert: false,\n      errorMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchQuestionList();\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      questionList: []\n    });\n  }\n\n  handleErrors(response) {\n    console.log(\"Response: \", response);\n\n    if (!response.ok) {\n      console.log(\"Response: \", response);\n    } // throw Error();\n\n\n    return response;\n  }\n\n  render() {\n    const questionList = this.state.questionList;\n    console.log(\"Questions: \", questionList);\n    console.log(\"ErrorAlert: \", this.state.errorAlert);\n    console.log(\"ErrorMessage: \", this.state.errorMessage);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [this.state.errorAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScrollableTable, {\n        columns: columns,\n        rows: questionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Área de Trabalho/SimpleApp/App/frontend-app/src/scenes/QuestionList/QuestionList.js"],"names":["React","Fragment","Alert","ScrollableTable","columns","id","label","QuestionList","Component","constructor","props","fetchQuestionList","page","url","process","env","REACT_APP_SERVER_URL","fetch","then","handleErrors","res","json","result","setState","questionList","catch","error","console","log","response","status","errorAlert","errorMessage","message","state","componentDidMount","componentWillUnmount","ok","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport \"./QuestionList.css\";\r\n//Import Components\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport ScrollableTable from \"../../components/ScrollableTable\";\r\n\r\n// const mockQuestions = [\r\n//   {\r\n//     id: \"5feb6904f827835ed827ddeb\",\r\n//     name: \"Who am I?\",\r\n//     email: \"who@sky.world\",\r\n//     date: \"2020-12-31T00:00:00.000Z\",\r\n//     observations: \"Who knows.\",\r\n//     creationDate: \"2020-12-29T17:36:04.933Z\",\r\n//   },\r\n//   {\r\n//     id: \"5feb6904f827835ed827ddeb\",\r\n//     name: \"Who am I?\",\r\n//     email: \"who@sky.world\",\r\n//     date: \"2020-12-31T00:00:00.000Z\",\r\n//     observations: \"Who knows.\",\r\n//     creationDate: \"2020-12-29T17:36:04.933Z\",\r\n//   },\r\n// ];\r\n\r\nconst columns = [\r\n  {\r\n    id: \"name\",\r\n    label: \"Name\",\r\n  },\r\n  {\r\n    id: \"email\",\r\n    label: \"Email\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"Date\",\r\n  },\r\n  {\r\n    id: \"observations\",\r\n    label: \"Observations\",\r\n  },\r\n  {\r\n    id: \"creationDate\",\r\n    label: \"Creation Date\",\r\n  },\r\n];\r\n\r\nclass QuestionList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      questionList: [],\r\n      errorAlert: false,\r\n      errorMessage: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchQuestionList();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ questionList: [] });\r\n  }\r\n\r\n  handleErrors(response) {\r\n    console.log(\"Response: \", response);\r\n    if (!response.ok)\r\n    {\r\n        console.log(\"Response: \", response);\r\n    }\r\n       // throw Error();\r\n    return response;\r\n}\r\n\r\n  fetchQuestionList = (id, page) => {\r\n    let url = process.env.REACT_APP_SERVER_URL + \"/questions\";\r\n\r\n    if (id) {\r\n      url += `?id=${id}`;\r\n    } else if (page) {\r\n      url += `?page=${page}`;\r\n    }\r\n\r\n    fetch(url)\r\n        .then(this.handleErrors)\r\n        .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({ questionList: result });\r\n      })\r\n      .catch(function (error) {\r\n          console.log(\"ERROR: \", error);\r\n        switch (error.response.status) {\r\n          default:\r\n            this.setState({\r\n              errorAlert: true,\r\n              errorMessage: error.response.message,\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const questionList = this.state.questionList;\r\n\r\n    console.log(\"Questions: \", questionList);\r\n    console.log(\"ErrorAlert: \", this.state.errorAlert);\r\n    console.log(\"ErrorMessage: \", this.state.errorMessage);\r\n\r\n    return (\r\n      <Fragment>\r\n        {this.state.errorAlert && (\r\n          <Alert severity=\"error\">{this.state.errorMessage}</Alert>\r\n        )}\r\n        <ScrollableTable columns={columns} rows={questionList} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionList;\r\n"]},"metadata":{},"sourceType":"module"}