{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\SimpleApp\\\\App\\\\frontend-app\\\\src\\\\scenes\\\\QuestionList\\\\QuestionList.js\";\nimport React from \"react\";\nimport \"./QuestionList.css\"; //Import Components\n\nimport ScrollableTable from \"../../components/ScrollableTable\";\nimport QuestionListItem from \"./QuestionListItem\";\nconst mockQuestions = [{\n  id: \"5feb6904f827835ed827ddeb\",\n  name: \"Who am I?\",\n  email: \"who@sky.world\",\n  date: \"2020-12-31T00:00:00.000Z\",\n  observations: \"Who knows.\",\n  creationDate: \"2020-12-29T17:36:04.933Z\"\n}, {\n  id: \"5feb6904f827835ed827ddeb\",\n  name: \"Who am I?\",\n  email: \"who@sky.world\",\n  date: \"2020-12-31T00:00:00.000Z\",\n  observations: \"Who knows.\",\n  creationDate: \"2020-12-29T17:36:04.933Z\"\n}];\nconst columns = [{\n  id: \"name\",\n  label: \"Name\"\n}, {\n  id: \"email\",\n  label: \"Email\"\n}, {\n  id: \"date\",\n  label: \"Date\"\n}, {\n  id: \"observations\",\n  label: \"Observations\"\n}, {\n  id: \"creationDate\",\n  label: \"Creation Date\"\n}];\n\nclass QuestionList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionList: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/questions\").then(res => res.json()).then(result => {\n      this.setState({\n        questionList: result\n      });\n    });\n  }\n\n  render() {\n    console.log(\"Questions: \", this.state.questionList);\n    return /*#__PURE__*/_jsxDEV(ScrollableTable, {\n      columns: columns,\n      rows: mockQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Área de Trabalho/SimpleApp/App/frontend-app/src/scenes/QuestionList/QuestionList.js"],"names":["React","ScrollableTable","QuestionListItem","mockQuestions","id","name","email","date","observations","creationDate","columns","label","QuestionList","Component","constructor","props","state","questionList","componentDidMount","fetch","then","res","json","result","setState","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,0BADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,KAAK,EAAE,eAHT;AAIEC,EAAAA,IAAI,EAAE,0BAJR;AAKEC,EAAAA,YAAY,EAAE,YALhB;AAMEC,EAAAA,YAAY,EAAE;AANhB,CADoB,EASpB;AACEL,EAAAA,EAAE,EAAE,0BADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,KAAK,EAAE,eAHT;AAIEC,EAAAA,IAAI,EAAE,0BAJR;AAKEC,EAAAA,YAAY,EAAE,YALhB;AAMEC,EAAAA,YAAY,EAAE;AANhB,CAToB,CAAtB;AAmBA,MAAMC,OAAO,GAAG,CACd;AACEN,EAAAA,EAAE,EAAE,MADN;AAEEO,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACEP,EAAAA,EAAE,EAAE,OADN;AAEEO,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACEP,EAAAA,EAAE,EAAE,MADN;AAEEO,EAAAA,KAAK,EAAE;AAFT,CATc,EAad;AACEP,EAAAA,EAAE,EAAE,cADN;AAEEO,EAAAA,KAAK,EAAE;AAFT,CAbc,EAiBd;AACEP,EAAAA,EAAE,EAAE,cADN;AAEEO,EAAAA,KAAK,EAAE;AAFT,CAjBc,CAAhB;;AAuBA,MAAMC,YAAN,SAA2BZ,KAAK,CAACa,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,YAAY,EAAC;AADN,KAAX;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CAAyCC,IAAzC,CAA8CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAArD,EAAiEF,IAAjE,CAAsEG,MAAM,IAAI;AAAC,WAAKC,QAAL,CAAc;AAACP,QAAAA,YAAY,EAACM;AAAd,OAAd;AAAqC,KAAtH;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKX,KAAL,CAAWC,YAAtC;AACA,wBACI,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEP,OAA1B;AAAmC,MAAA,IAAI,EAAEP;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAlBsC;;AAqB3C,eAAeS,YAAf","sourcesContent":["import React from \"react\";\r\nimport \"./QuestionList.css\";\r\n//Import Components\r\nimport ScrollableTable from \"../../components/ScrollableTable\";\r\nimport QuestionListItem from \"./QuestionListItem\";\r\n\r\nconst mockQuestions = [\r\n  {\r\n    id: \"5feb6904f827835ed827ddeb\",\r\n    name: \"Who am I?\",\r\n    email: \"who@sky.world\",\r\n    date: \"2020-12-31T00:00:00.000Z\",\r\n    observations: \"Who knows.\",\r\n    creationDate: \"2020-12-29T17:36:04.933Z\",\r\n  },\r\n  {\r\n    id: \"5feb6904f827835ed827ddeb\",\r\n    name: \"Who am I?\",\r\n    email: \"who@sky.world\",\r\n    date: \"2020-12-31T00:00:00.000Z\",\r\n    observations: \"Who knows.\",\r\n    creationDate: \"2020-12-29T17:36:04.933Z\",\r\n  },\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    id: \"name\",\r\n    label: \"Name\"\r\n  },\r\n  {\r\n    id: \"email\",\r\n    label: \"Email\"\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"Date\"\r\n  },\r\n  {\r\n    id: \"observations\",\r\n    label: \"Observations\"\r\n  },\r\n  {\r\n    id: \"creationDate\",\r\n    label: \"Creation Date\"\r\n  },\r\n];\r\n\r\nclass QuestionList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            questionList:[]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:3000/questions\").then(res => res.json()).then(result => {this.setState({questionList:result})}); \r\n    }\r\n\r\n    render() {\r\n        console.log(\"Questions: \", this.state.questionList)\r\n        return (\r\n            <ScrollableTable columns={columns} rows={mockQuestions} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuestionList;\r\n"]},"metadata":{},"sourceType":"module"}