{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\SimpleApp\\\\App\\\\frontend-app\\\\src\\\\scenes\\\\QuestionList\\\\QuestionList.js\";\nimport React from \"react\";\nimport \"./QuestionList.css\"; //Import Components\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst mockQuestions = [{\n  id: \"5feb6904f827835ed827ddeb\",\n  name: \"Who am I?\",\n  email: \"who@sky.world\",\n  date: \"2020-12-31T00:00:00.000Z\",\n  observations: \"Who knows.\",\n  creationDate: \"2020-12-29T17:36:04.933Z\"\n}, {\n  id: \"5feb6904f827835ed827ddeb\",\n  name: \"Who am I?\",\n  email: \"who@sky.world\",\n  date: \"2020-12-31T00:00:00.000Z\",\n  observations: \"Who knows.\",\n  creationDate: \"2020-12-29T17:36:04.933Z\"\n}];\nconst columns = [{\n  field: \"name\",\n  headerName: \"Name\"\n}, {\n  field: \"email\",\n  headerName: \"Email\"\n}, {\n  field: \"date\",\n  headerName: \"Date\"\n}, {\n  field: \"observations\",\n  headerName: \"Observations\"\n}, {\n  field: \"creationDate\",\n  headerName: \"Creation Date\"\n}];\n\nconst QuestionList = () => /*#__PURE__*/_jsxDEV(ScrollableTable, {\n  columns: columns,\n  data: mockQuestions\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 3\n}, this) // <ul>\n//     {questionList.map(question => (\n//         <QuestionListItem key={question.id} question={question} />\n//     ))}\n// </ul>\n;\n\n_c = QuestionList;\nexport default QuestionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionList\");","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Área de Trabalho/SimpleApp/App/frontend-app/src/scenes/QuestionList/QuestionList.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","mockQuestions","id","name","email","date","observations","creationDate","columns","field","headerName","QuestionList"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,0BADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,KAAK,EAAE,eAHT;AAIEC,EAAAA,IAAI,EAAE,0BAJR;AAKEC,EAAAA,YAAY,EAAE,YALhB;AAMEC,EAAAA,YAAY,EAAE;AANhB,CADoB,EASpB;AACEL,EAAAA,EAAE,EAAE,0BADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,KAAK,EAAE,eAHT;AAIEC,EAAAA,IAAI,EAAE,0BAJR;AAKEC,EAAAA,YAAY,EAAE,YALhB;AAMEC,EAAAA,YAAY,EAAE;AANhB,CAToB,CAAtB;AAmBA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,UAAU,EAAE;AAFd,CADc,EAKd;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,UAAU,EAAE;AAFd,CALc,EASd;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,UAAU,EAAE;AAFd,CATc,EAad;AACED,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,UAAU,EAAE;AAFd,CAbc,EAiBd;AACED,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,UAAU,EAAE;AAFd,CAjBc,CAAhB;;AAuBA,MAAMC,YAAY,GAAG,mBACnB,QAAC,eAAD;AAAiB,EAAA,OAAO,EAAEH,OAA1B;AAAmC,EAAA,IAAI,EAAEP;AAAzC;AAAA;AAAA;AAAA;AAAA,QADmB,CAEnB;AACA;AACA;AACA;AACA;AANF;;KAAMU,Y;AASN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport \"./QuestionList.css\";\r\n//Import Components\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst mockQuestions = [\r\n  {\r\n    id: \"5feb6904f827835ed827ddeb\",\r\n    name: \"Who am I?\",\r\n    email: \"who@sky.world\",\r\n    date: \"2020-12-31T00:00:00.000Z\",\r\n    observations: \"Who knows.\",\r\n    creationDate: \"2020-12-29T17:36:04.933Z\",\r\n  },\r\n  {\r\n    id: \"5feb6904f827835ed827ddeb\",\r\n    name: \"Who am I?\",\r\n    email: \"who@sky.world\",\r\n    date: \"2020-12-31T00:00:00.000Z\",\r\n    observations: \"Who knows.\",\r\n    creationDate: \"2020-12-29T17:36:04.933Z\",\r\n  },\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Name\"\r\n  },\r\n  {\r\n    field: \"email\",\r\n    headerName: \"Email\"\r\n  },\r\n  {\r\n    field: \"date\",\r\n    headerName: \"Date\"\r\n  },\r\n  {\r\n    field: \"observations\",\r\n    headerName: \"Observations\"\r\n  },\r\n  {\r\n    field: \"creationDate\",\r\n    headerName: \"Creation Date\"\r\n  },\r\n];\r\n\r\nconst QuestionList = () => (\r\n  <ScrollableTable columns={columns} data={mockQuestions} />\r\n  // <ul>\r\n  //     {questionList.map(question => (\r\n  //         <QuestionListItem key={question.id} question={question} />\r\n  //     ))}\r\n  // </ul>\r\n);\r\n\r\nexport default QuestionList;\r\n"]},"metadata":{},"sourceType":"module"}