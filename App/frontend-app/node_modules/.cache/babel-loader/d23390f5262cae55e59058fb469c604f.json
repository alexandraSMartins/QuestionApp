{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\SimpleApp\\\\App\\\\frontend-app\\\\src\\\\components\\\\ScrollableTable.js\";\nimport React, { PureComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nclass ScrollableTable extends PureComponent {\n  render() {\n    const {\n      columns,\n      rows\n    } = this.props;\n    console.log(\"data: \", rows);\n    console.log(\"columns: \", columns);\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === \"number\" ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, row._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [20],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ScrollableTable;","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/√Årea de Trabalho/SimpleApp/App/frontend-app/src/components/ScrollableTable.js"],"names":["React","PureComponent","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","ScrollableTable","render","columns","rows","props","console","log","map","column","align","minWidth","label","id","slice","page","rowsPerPage","row","value","format","_id","length","handleChangePage","handleChangeRowsPerPage"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nclass ScrollableTable extends PureComponent {\r\n  render() {\r\n    const { columns, rows } = this.props;\r\n\r\n    console.log(\"data: \", rows);\r\n\r\n    console.log(\"columns: \", columns);\r\n\r\n    return (\r\n      <Paper className=\"root\">\r\n        <TableContainer className=\"container\">\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row._id}\r\n                    >\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === \"number\"\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[20]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScrollableTable;\r\n"]},"metadata":{},"sourceType":"module"}